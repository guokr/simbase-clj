{
    "ping":{
        "summary": "ping", "complexity": "O(1)",
        "arguments": [],
        "since": "0.1.0",
        "group": "general"
    },
    "save":{
        "summary": "Save all data to dump files to data dir", "complexity": "O(n)",
        "arguments": [],
        "since": "0.1.0",
        "group": "general"
    },
    "load":{
        "summary": "Load all dump files from data dir", "complexity": "O(n)",
        "arguments": [],
        "since": "0.1.0",
        "group": "general"
    },
    "del":{
        "summary": "Delete a base, vector set, or recommendation", "complexity": "O(1)",
        "arguments": [
            {
                "name": "key",
                "type": "key"
            }
        ],
        "since": "0.1.0",
        "group": "general"
    },

    "bsave":{
        "summary": "Save all data of a base", "complexity": "O(n)",
        "arguments": [
            {
                "name": "bkey",
                "type": "key"
            }
        ],
        "since": "0.1.0",
        "group": "base"
    },
    "bload":{
        "summary": "Load a base from a dump file in data dir", "complexity": "O(n)",
        "arguments": [
            {
                "name": "bkey",
                "type": "key"
            }
        ],
        "since": "0.1.0",
        "group": "base"
    },
    "blist":{
        "summary": "List all bases", "complexity": "O(1)",
        "arguments": [
        ],
        "since": "0.1.0",
        "group": "base"
    },
    "bmk":{
        "summary": "Make a new base", "complexity": "O(1)",
        "arguments": [
            {
                "name": "bkey",
                "type": "key"
            },
            {
                "name": "schema",
                "type": "string",
                "multiple": true
            }
        ],
        "since": "0.1.0",
        "group": "base"
    },
    "bget":{
        "summary": "Get the schema of a base", "complexity": "O(1)",
        "arguments": [
            {
                "name": "bkey",
                "type": "key"
            }
        ],
        "since": "0.1.0",
        "group": "base"
    },
    "brev":{
        "summary": "Revise the schema of a base", "complexity": "O(1)",
        "arguments": [
            {
                "name": "bkey",
                "type": "key"
            },
            {
                "name": "schema",
                "type": "string",
                "multiple": true
            }
        ],
        "since": "0.1.0",
        "group": "base"
    },

    "vlist":{
        "summary": "List all vector sets under a base", "complexity": "O(1)",
        "arguments": [
            {
                "name": "bkey",
                "type": "key"
            }
        ],
        "since": "0.1.0",
        "group": "vector set"
    },
    "vmk":{
        "summary": "List all vector sets under a base", "complexity": "O(1)",
        "arguments": [
            {
                "name": "bkey",
                "type": "key"
            },
            {
                "name": "vkey",
                "type": "key"
            }
        ],
        "since": "0.1.0",
        "group": "vector set"
    },
    "vids":{
        "summary": "List all vector ids in a vector set", "complexity": "O(n)",
        "arguments": [
            {
                "name": "vkey",
                "type": "key"
            }
        ],
        "since": "0.1.0",
        "group": "vector set"
    },
    "vrem":{
        "summary": "Remove a vector in a vector set", "complexity": "O(1)",
        "arguments": [
            {
                "name": "vkey",
                "type": "key"
            },
            {
                "name": "vecid",
                "type": "integer"
            }
        ],
        "since": "0.1.0",
        "group": "vector set"
    },
    "vadd":{
        "summary": "Add a vector to a vecto rset, if exists, ignore the operation", "complexity": "O(n)",
        "arguments": [
            {
                "name": "vkey",
                "type": "key"
            },
            {
                "name": "vecid",
                "type": "integer"
            },
            {
                "name": "value",
                "type": "float",
                "multiple": true
            }
        ],
        "since": "0.1.0",
        "group": "vectorset"
    },
    "vget":{
        "summary": "Get a vector from a vector set", "complexity": "O(1)",
        "arguments": [
            {
                "name": "vkey",
                "type": "key"
            },
            {
                "name": "vecid",
                "type": "integer"
            }
        ],
        "since": "0.1.0",
        "group": "vector set"
    },
    "vadd":{
        "summary": "Add a vector to a vector set, if exists, replace it", "complexity": "O(n)",
        "arguments": [
            {
                "name": "vkey",
                "type": "key"
            },
            {
                "name": "vecid",
                "type": "integer"
            },
            {
                "name": "value",
                "type": "float",
                "multiple": true
            }
        ],
        "since": "0.1.0",
        "group": "vector set"
    },
    "vacc":{
        "summary": "Accumulate a vector to a specific vector in vector set", "complexity": "O(n)",
        "arguments": [
            {
                "name": "vkey",
                "type": "key"
            },
            {
                "name": "vecid",
                "type": "integer"
            },
            {
                "name": "value",
                "type": "float",
                "multiple": true
            }
        ],
        "since": "0.1.0",
        "group": "vector set"
    },
    "iadd":{
        "summary": "Add a vector to a vector set with position, value pairs, if exists, ignore", "complexity": "O(n)",
        "arguments": [
            {
                "name": "vkey",
                "type": "key"
            },
            {
                "name": "vecid",
                "type": "integer"
            },
            {
                "name": "pair",
                "type": "integer",
                "multiple": true
            }
        ],
        "since": "0.1.0",
        "group": "vector set"
    },
    "iget":{
        "summary": "Get a sparse vector from a vector set", "complexity": "O(1)",
        "arguments": [
            {
                "name": "vkey",
                "type": "key"
            },
            {
                "name": "vecid",
                "type": "integer"
            }
        ],
        "since": "0.1.0",
        "group": "vector set"
    },
    "iset":{
        "summary": "Set a vector to a vector set with position, value pairs, if exists, replace it", "complexity": "O(n)",
        "arguments": [
            {
                "name": "vkey",
                "type": "key"
            },
            {
                "name": "vecid",
                "type": "integer"
            },
            {
                "name": "pair",
                "type": "integer",
                "multiple": true
            }
        ],
        "since": "0.1.0",
        "group": "vector set"
    },
    "iacc":{
        "summary": "Accumulate a vector with position, value pair to a vector in vector set", "complexity": "O(n)",
        "arguments": [
            {
                "name": "vkey",
                "type": "key"
            },
            {
                "name": "vecid",
                "type": "integer"
            },
            {
                "name": "pair",
                "type": "integar",
                "multiple": true
            }
        ],
        "since": "0.1.0",
        "group": "vectorset"
    },

    "rlist":{
        "summary": "List all recommendations under a vector set", "complexity": "O(1)",
        "arguments": [
            {
                "name": "vkey",
                "type": "key"
            }
        ],
        "since": "0.1.0",
        "group": "recommendation"
    },
    "rmk":{
        "summary": "Make a recommendation between two vector sets with a score function", "complexity": "O(1)",
        "arguments": [
            {
                "name": "sourceVKey",
                "type": "key"
            },
            {
                "name": "targetVKey",
                "type": "key"
            },
            {
                "name": "scoreFunction",
                "type": "string"
            }
        ],
        "since": "0.1.0",
        "group": "recommendation"
    },
    "rget":{
        "summary": "Get a recommendation list with score", "complexity": "O(1)",
        "arguments": [
            {
                "name": "sourceVKey",
                "type": "key"
            },
            {
                "name": "vecid",
                "type": "key"
            },
            {
                "name": "targetVKey",
                "type": "key"
            }
        ],
        "since": "0.1.0",
        "group": "recommendation"
    },
    "rrec":{
        "summary": "Get a recommendation list without score", "complexity": "O(1)",
        "arguments": [
            {
                "name": "sourceVKey",
                "type": "key"
            },
            {
                "name": "vecid",
                "type": "key"
            },
            {
                "name": "targetVKey",
                "type": "key"
            }
        ],
        "since": "0.1.0",
        "group": "recommendation"
    }
}

